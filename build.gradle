apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.jakewharton.butterknife'
apply from:"HXModuleConfig.gradle"

def props = project.ext.android;

android {
    compileSdkVersion props.compileSdkVersion
    buildToolsVersion props.buildToolsVersion

    defaultConfig {
        minSdkVersion props.minSdkVersion
        targetSdkVersion props.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
//            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
//            jniLibs.srcDirs "jniLibs"
            List<String> resDirs = new ArrayList<>();
            getDirs(resDirs, file("src").listFiles(), "res")
            for (int i = 0; i < resDirs.size(); i++) {
                res.srcDirs resDirs.get(i)
            }
            List<String> javaDirs = new ArrayList<>();
            getDirs(javaDirs, file("src").listFiles(), "java")
            for (int i = 0; i < javaDirs.size(); i++) {
                java.srcDirs javaDirs.get(i)
            }
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:' + props.dependencyVersion
    compile 'com.android.support:appcompat-v7:' + props.dependencyVersion
    compile 'com.android.support:cardview-v7:' + props.dependencyVersion
    compile 'com.android.support:design:' + props.dependencyVersion
    compile 'com.android.support:percent:' + props.dependencyVersion
    compile 'com.android.support:recyclerview-v7:' + props.dependencyVersion
    compile 'com.jakewharton:butterknife:8.4.0'
    compile 'io.reactivex:rxjava:1.0.12'
    compile 'io.reactivex:rxandroid:0.25.0'
    compile 'com.alibaba:fastjson:1.2.24'
    compile 'com.alibaba:fastjson:1.1.56.android'
    compile 'com.jcodecraeer:xrecyclerview:1.2.7'
    compile 'com.orhanobut:dialogplus:1.11@aar'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'cn.finalteam:galleryfinal:1.4.8.7'
    compile 'com.jakewharton:disklrucache:2.0.2'
}

void getDirs(List<String> list, dirs, String key){
    dirs.each{
        if(it.isDirectory()){
            if(it.name == key) list.add(it)
            else getDirs(list, it.listFiles(), key)
        }
    }
}



//    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'
//    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.3'
//    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
//compile 'cn.pedant.sweetalert:library:1.3'

//    compile 'com.jakewharton.timber:timber:3.1.0'
//    compile 'com.squareup.retrofit2:retrofit:2.2.0'
//    compile 'com.squareup.retrofit2:converter-jackson:2.2.0'
//    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
//    compile 'com.squareup.okhttp:okhttp:2.5.0'
//    compile 'com.squareup.okio:okio:1.6.0'
//    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'

//compile 'com.nineoldandroids:library:2.4.0'

//    compile 'commons-beanutils:commons-beanutils:20030211.134440'
//    compile 'org.openpnp:opencv:3.2.0-1'

//annotationProcessor 'com.google.dagger:dagger-compiler:2.8'
//compile 'com.google.dagger:dagger:2.8'